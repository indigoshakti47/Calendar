[{"/Users/nathalia/Programming/React/calendar/src/redux/reducer.js":"1","/Users/nathalia/Programming/React/calendar/src/components/Reminders.js":"2","/Users/nathalia/Programming/React/calendar/src/components/Calendar.js":"3","/Users/nathalia/Programming/React/calendar/src/components/Event.js":"4","/Users/nathalia/Programming/React/calendar/src/redux/actions.js":"5","/Users/nathalia/Programming/React/calendar/src/redux/actionTypes.js":"6","/Users/nathalia/Programming/React/calendar/src/components/EventListModal.js":"7","/Users/nathalia/Programming/React/calendar/src/components/AlertModal.js":"8"},{"size":2245,"mtime":1610927251981,"results":"9","hashOfConfig":"10"},{"size":938,"mtime":1610933727244,"results":"11","hashOfConfig":"10"},{"size":2808,"mtime":1610925861455,"results":"12","hashOfConfig":"10"},{"size":2298,"mtime":1610925777134,"results":"13","hashOfConfig":"10"},{"size":935,"mtime":1610926875821,"results":"14","hashOfConfig":"10"},{"size":389,"mtime":1610926856852,"results":"15","hashOfConfig":"10"},{"size":1560,"mtime":1610927396797,"results":"16","hashOfConfig":"10"},{"size":508,"mtime":1610858089368,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"unl41p",{"filePath":"20","messages":"21","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/nathalia/Programming/React/calendar/src/redux/reducer.js",[],"/Users/nathalia/Programming/React/calendar/src/components/Reminders.js",["36","37"],"/Users/nathalia/Programming/React/calendar/src/components/Calendar.js",["38"],"import React, { useState, useEffect } from \"react\";\nimport { connect } from 'react-redux';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faChevronLeft,\n  faChevronRight,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nimport { openList } from '../redux/actions';\nimport { getcityWeather } from '../apis/Weather'\nimport { getDaystoSkip, getNextMonth, getLastMonth, getDaysInMonthArray, getDayColor } from '../utils/dateUtils';\nimport CalendarHeader from \"./CalendarHeader.js\";\nimport EventModal from \"./EventModal\";\nimport EventListModal from \"./EventListModal\";\nimport Day from \"./Day.js\";\nimport \"../styles/Calendar.scss\";\nimport { weekdays, months } from \"../constants/Dates\";\n\nfunction Calendar({ globalCity, openList, appointments }) {\n  const [dateSelected, setDateSelected] = useState(new Date());\n  const [weather, setWeather] = useState([]);\n  const today = new Date();\n  \n  useEffect(() => {\n    getWeather();\n  }, [globalCity]);\n\n  const getWeather = async () => {\n    const weatherData = await getcityWeather(globalCity);\n    setWeather(weatherData);\n  }\n\n  const days = getDaysInMonthArray(dateSelected);\n\n  const daysToSkip = getDaystoSkip(dateSelected);\n  const moveToNextMonth = () => setDateSelected(getNextMonth(dateSelected));\n\n  const moveToLastMonth = () => setDateSelected(getLastMonth(dateSelected));\n\n  return (\n    <>\n      <EventListModal />\n      <EventModal />\n      <div className=\"calendar\" >\n        <FontAwesomeIcon\n            icon={faChevronLeft}\n            onClick={moveToLastMonth}\n            className=\"hover-icon\"\n        />\n        <div className=\"calendar__grid\">\n          <h1 className=\"month\">{`${months[dateSelected.getMonth()]} ${dateSelected.getFullYear()}`}</h1>\n          {weekdays.map((weekday) => (\n            <CalendarHeader key={weekday}>{weekday}</CalendarHeader>\n          ))}\n          {daysToSkip.map((_, i) => (\n            <p key={i}></p>\n          ))}\n          {days.map((_, index) => (\n            <Day\n              key={index}\n              color={getDayColor(today, dateSelected, index + 1)}\n              weatherIcon={weather[`${dateSelected.getFullYear()}_${dateSelected.getMonth()}_${index}`]}\n              onDayClick={() => openList(`${dateSelected.getFullYear()}_${dateSelected.getMonth()}_${index + 1}`)}\n              appointments={appointments[`${dateSelected.getFullYear()}_${dateSelected.getMonth()}_${index + 1}`]}\n            > {index + 1}</Day>\n          ))}\n        </div>\n        <FontAwesomeIcon\n          icon={faChevronRight}\n          onClick={moveToNextMonth}\n          className=\"hover-icon\"\n        />\n      </div>\n    </>\n  );\n}\n\nconst mapStateToProps = ({ globalCity, appointments }) => ({\n  globalCity,\n  appointments\n});\n\nexport default connect(mapStateToProps, { openList })(Calendar);\n",["39","40"],"/Users/nathalia/Programming/React/calendar/src/components/Event.js",[],"/Users/nathalia/Programming/React/calendar/src/redux/actions.js",[],"/Users/nathalia/Programming/React/calendar/src/redux/actionTypes.js",[],"/Users/nathalia/Programming/React/calendar/src/components/EventListModal.js",["41"],"/Users/nathalia/Programming/React/calendar/src/components/AlertModal.js",[],{"ruleId":"42","severity":1,"message":"43","line":4,"column":10,"nodeType":"44","messageId":"45","endLine":4,"endColumn":25},{"ruleId":"42","severity":1,"message":"46","line":5,"column":10,"nodeType":"44","messageId":"45","endLine":5,"endColumn":23},{"ruleId":"47","severity":1,"message":"48","line":26,"column":6,"nodeType":"49","endLine":26,"endColumn":18,"suggestions":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":24,"column":11,"nodeType":"57","endLine":24,"endColumn":60},"no-unused-vars","'FontAwesomeIcon' is defined but never used.","Identifier","unusedVar","'faChevronDown' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getWeather'. Either include it or remove the dependency array.","ArrayExpression",["58"],"no-native-reassign",["59"],"no-negated-in-lhs",["60"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",{"desc":"61","fix":"62"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [getWeather, globalCity]",{"range":"63","text":"64"},[952,964],"[getWeather, globalCity]"]